The capstone project for this course is largely open ended. You'll choose one or more third party APIs to work with and come up with an app that does something interesting with your data. Ultimately, the user experience is up to you. The high level requirements for your app are as follows:

Create a Single Page App That Integrates with an API: The overarching UX (user experience) requirement for this app is that it pulls in data from one or more third party APIs and displays that data in some way to your user. The app should be a SPA (single page app).
The app should do something interesting: It's up to you to figure out how to make this experience feel compelling to the user, and who it is that you want to make something interesting for.
Use React, React Router, and Redux: Your captone must make use of React, React Router, and Redux, the three main technologies taught in this course.
Unit Test: You should strive for comprehensive test coverage. Specifically, you should write unit tests for your: components, routes, action creators, and reducer functions.
Use continuous integration: The first step in implementing your app will be to set up continuous integration so that as you complete features, one at a time, you'll be able to see your tests passing and deploy to production. This process is described in detail in the third assignment on implementing your app.
Polished appearance for final version: Initially, you'll implement a minimal, functional prototype of your app, which you'll use to get feedback on your app's features. While the first version should not be polished, the final version you submit should be. We'll go into greater detail about what this means in the assignment dedicated to styling your app.
Responsive: The final version of your app should work on both mobile and desktop. Note that while there are libraries that bring responsiveness into the React layer of your app, we'd like you to implement this using CSS and media queries.

*React research*
https://github.com/madox2/react-tagcloud  <--This one. More info: https://madox2.github.io/react-tagcloud/ (see custom render)
https://github.com/Yoctol/react-d3-cloud
http://www.goat1000.com/tagcanvas.php
    Not so good
https://en.wikipedia.org/w/api.php?action=query&prop=linkshere|info|pageimages&format=json&pageids=329119
https://en.wikipedia.org/w/api.php?action=query&prop=linkshere|info|pageimages&format=json&titles=Wim_Fissette
https://en.wikipedia.org/wiki/Wim_Fissette

https://www.mediawiki.org/wiki/API:Query
https://www.mediawiki.org/wiki/API:Info

State:
search term: String


User Stories:
* As a user, I should be able to search for a wikipedia article and see an article that links to it from 5 steps away.
* As a user, I should have the option of a random page instead of typing in something.
* As a user, I should be able to click on any found item and open that page.